using LegendrePolynomials
using Test
using BenchmarkTools

include("rotate.jl")

# Legendre polynomials
P = 10
θ = pi/7
pnms = compute_Pnms(P, sin(θ), cos(θ))

for n in 0:P
    for m in 0:n
        i = Pnm_index(n, m)
        @test isapprox(pnms[i], Plm(cos(θ),n,m); rtol=1e-12)
    end
end

#--- H matrices ---#

const Hs_π2 = [1.0]

expansion_order = 4
update_Hs_π2!(10)

H0 = [1.0;;;]
H1 = [     -0.5+0.0im     0.707107+0.0im       0.5-0.0im
 0.707107+0.0im  6.12323e-17+0.0im  0.707107+0.0im
 0.5-0.0im     0.707107+0.0im      -0.5+0.0im]
H2 = [     0.25+0.0im        -0.5+0.0im    0.612372+0.0im         0.5-0.0im      0.25+0.0im
     -0.5+0.0im         0.5+0.0im  7.4994e-17+0.0im         0.5-0.0im       0.5-0.0im
 0.612372+0.0im  7.4994e-17+0.0im        -0.5+0.0im  7.4994e-17+0.0im  0.612372+0.0im
      0.5-0.0im         0.5-0.0im  7.4994e-17+0.0im         0.5+0.0im      -0.5+0.0im
      0.25+0.0im         0.5-0.0im    0.612372+0.0im        -0.5+0.0im      0.25+0.0im]
H3 = [    -0.125+0.0im     0.306186+0.0im  -0.484123+0.0im      0.559017+0.0im   0.484123-0.0im     0.306186+0.0im      0.125-0.0im
  0.306186+0.0im         -0.5+0.0im   0.395285+0.0im   8.38458e-17+0.0im   0.395285-0.0im          0.5-0.0im   0.306186+0.0im
 -0.484123+0.0im     0.395285+0.0im      0.125+0.0im     -0.433013+0.0im     -0.125-0.0im     0.395285-0.0im   0.484123-0.0im
  0.559017+0.0im  8.38458e-17+0.0im  -0.433013+0.0im  -9.18485e-17+0.0im  -0.433013+0.0im  8.38458e-17+0.0im   0.559017+0.0im
  0.484123-0.0im     0.395285-0.0im     -0.125-0.0im     -0.433013+0.0im      0.125+0.0im     0.395285+0.0im  -0.484123+0.0im
  0.306186+0.0im          0.5-0.0im   0.395285-0.0im   8.38458e-17+0.0im   0.395285+0.0im         -0.5+0.0im   0.306186+0.0im
  0.125-0.0im     0.306186+0.0im   0.484123-0.0im      0.559017+0.0im  -0.484123+0.0im     0.306186+0.0im     -0.125+0.0im]
H4 = [    0.0625+0.0im    -0.176777+0.0im   0.330719+0.0im    -0.467707+0.0im     0.522913+0.0im     0.467707-0.0im   0.330719+0.0im     0.176777-0.0im     0.0625+0.0im
 -0.176777+0.0im        0.375+0.0im  -0.467707+0.0im     0.330719+0.0im  9.05639e-17+0.0im     0.330719-0.0im   0.467707-0.0im        0.375-0.0im   0.176777-0.0im
  0.330719+0.0im    -0.467707+0.0im       0.25+0.0im     0.176777+0.0im    -0.395285+0.0im    -0.176777-0.0im       0.25-0.0im     0.467707-0.0im   0.330719+0.0im
 -0.467707+0.0im     0.330719+0.0im   0.176777+0.0im       -0.375+0.0im  -1.0269e-16+0.0im       -0.375-0.0im  -0.176777-0.0im     0.330719-0.0im   0.467707-0.0im
  0.522913+0.0im  9.05639e-17+0.0im  -0.395285+0.0im  -1.0269e-16+0.0im        0.375+0.0im  -1.0269e-16+0.0im  -0.395285+0.0im  9.05639e-17+0.0im   0.522913+0.0im
  0.467707-0.0im     0.330719-0.0im  -0.176777-0.0im       -0.375-0.0im  -1.0269e-16+0.0im       -0.375+0.0im   0.176777+0.0im     0.330719+0.0im  -0.467707+0.0im
  0.330719+0.0im     0.467707-0.0im       0.25-0.0im    -0.176777-0.0im    -0.395285+0.0im     0.176777+0.0im       0.25+0.0im    -0.467707+0.0im   0.330719+0.0im
  0.176777-0.0im        0.375-0.0im   0.467707-0.0im     0.330719-0.0im  9.05639e-17+0.0im     0.330719+0.0im  -0.467707+0.0im        0.375+0.0im  -0.176777+0.0im
  0.0625+0.0im     0.176777-0.0im   0.330719+0.0im     0.467707-0.0im     0.522913+0.0im    -0.467707+0.0im   0.330719+0.0im    -0.176777+0.0im     0.0625+0.0im]
Hs_test = [H0,H1,H2,H3,H4]

for n in 1:expansion_order
    H_test = Hs_test[n+1]
    H = get_H(Hs_π2, n)
    for m in 0:n
        for mp in 0:m
            H_mp_m = H[H_index(mp,m)]
            H_mp_m_test = H_test[n+mp+1,n+m+1]
            @test isapprox(H_mp_m, H_mp_m_test; atol=1e-6)
        end
    end
end

#--- T matrices ---#

β = 3*pi/7
Ts = zeros(length_Ts(expansion_order))
update_Ts!(Ts, β, expansion_order)

T0 = [1.0;;]
T1 = [ -0.61126   0.689378   0.38874;
  0.689378  0.222521   0.689378;
  0.38874   0.689378  -0.61126;]
T2 = [  0.373639  -0.595935   0.58205    0.378993   0.151118;
 -0.595935   0.339224   0.265698   0.561745   0.378993;
  0.58205    0.265698  -0.425727   0.265698   0.58205;
  0.378993   0.561745   0.265698   0.339224  -0.595935;
  0.151118   0.378993   0.58205   -0.595935   0.373639;]
T3 = [ -0.228391    0.44614   -0.562545   0.518015   0.357758   0.180441   0.0587457;
  0.44614    -0.497851   0.15662    0.289612   0.499636   0.403118   0.180441;
 -0.562545    0.15662    0.37936   -0.31764    0.191254   0.499636   0.357758;
  0.518015    0.289612  -0.31764   -0.306236  -0.31764    0.289612   0.518015;
  0.357758    0.499636   0.191254  -0.31764    0.37936    0.15662   -0.562545;
  0.180441    0.403118   0.499636   0.289612   0.15662   -0.497851   0.44614;
  0.0587457   0.180441   0.357758   0.518015  -0.562545   0.44614   -0.228391]
T4 = [  0.139606   -0.314895    0.469804   -0.529844    0.47241    0.336961    0.190012    0.080996    0.0228368;
 -0.314895    0.481886   -0.378198    0.0422398   0.304974   0.461927    0.398295    0.228526    0.080996;
  0.469804   -0.378198   -0.0788519   0.392825   -0.245487   0.167609    0.438887    0.398295    0.190012;
 -0.529844    0.0422398   0.392825   -0.142662   -0.321788  -0.290271    0.167609    0.461927    0.336961;
  0.47241     0.304974   -0.245487   -0.321788    0.200043  -0.321788   -0.245487    0.304974    0.47241;
  0.336961    0.461927    0.167609   -0.290271   -0.321788  -0.142662    0.392825    0.0422398  -0.529844;
  0.190012    0.398295    0.438887    0.167609   -0.245487   0.392825   -0.0788519  -0.378198    0.469804;
  0.080996    0.228526    0.398295    0.461927    0.304974   0.0422398  -0.378198    0.481886   -0.314895;
  0.0228368   0.080996    0.190012    0.336961    0.47241   -0.529844    0.469804   -0.314895    0.139606;]

Ts_test = [T0,T1,T2,T3,T4]

for n in 1:expansion_order
    T_test = Ts_test[n+1]
    T = get_T(Ts, n)
    for m in 0:n
        for mp in -m:m
            T_mp_m = T[T_index(mp,m)]
            T_mp_m_test = T_test[n+mp+1,n+m+1]
            @test isapprox(T_mp_m, T_mp_m_test; atol=1e-6)
        end
    end
end


#--- profile ---#
# p = 4
# Ts_bm = zeros(length_Ts(p))
# @btime update_Ts!($Ts_bm, $β, $p)
#
# function profile_Ts(Ts, β, p, n)
#     for i in 1:n
#         update_Ts!(Ts, β, p)
#     end
# end
#
# using Profile
# using PProf
# @profile profile_Ts(Ts_bm, β, p, 1)
# Profile.clear()
# @profile profile_Ts(Ts_bm, β, p, 10000000)
# pprof()
