using LegendrePolynomials
using Test

include("rotate.jl")

# Legendre polynomials
P = 10
θ = pi/7
pnms = compute_Pnms(P, sin(θ), cos(θ))

for n in 0:P
    for m in 0:n
        i = Pnm_index(n, m)
        @test isapprox(pnms[i], Plm(cos(θ),n,m); rtol=1e-12)
    end
end

# H matrices
const Hs_π2 = [1.0]

n_max = 4
update_Hs_π2!(5)

H0 = [1.0;;;]
H1 = [     -0.5+0.0im     0.707107+0.0im       0.5-0.0im
 0.707107+0.0im  6.12323e-17+0.0im  0.707107+0.0im
 0.5-0.0im     0.707107+0.0im      -0.5+0.0im]
H2 = [     0.25+0.0im        -0.5+0.0im    0.612372+0.0im         0.5-0.0im      0.25+0.0im
     -0.5+0.0im         0.5+0.0im  7.4994e-17+0.0im         0.5-0.0im       0.5-0.0im
 0.612372+0.0im  7.4994e-17+0.0im        -0.5+0.0im  7.4994e-17+0.0im  0.612372+0.0im
      0.5-0.0im         0.5-0.0im  7.4994e-17+0.0im         0.5+0.0im      -0.5+0.0im
      0.25+0.0im         0.5-0.0im    0.612372+0.0im        -0.5+0.0im      0.25+0.0im]
H3 = [    -0.125+0.0im     0.306186+0.0im  -0.484123+0.0im      0.559017+0.0im   0.484123-0.0im     0.306186+0.0im      0.125-0.0im
  0.306186+0.0im         -0.5+0.0im   0.395285+0.0im   8.38458e-17+0.0im   0.395285-0.0im          0.5-0.0im   0.306186+0.0im
 -0.484123+0.0im     0.395285+0.0im      0.125+0.0im     -0.433013+0.0im     -0.125-0.0im     0.395285-0.0im   0.484123-0.0im
  0.559017+0.0im  8.38458e-17+0.0im  -0.433013+0.0im  -9.18485e-17+0.0im  -0.433013+0.0im  8.38458e-17+0.0im   0.559017+0.0im
  0.484123-0.0im     0.395285-0.0im     -0.125-0.0im     -0.433013+0.0im      0.125+0.0im     0.395285+0.0im  -0.484123+0.0im
  0.306186+0.0im          0.5-0.0im   0.395285-0.0im   8.38458e-17+0.0im   0.395285+0.0im         -0.5+0.0im   0.306186+0.0im
  0.125-0.0im     0.306186+0.0im   0.484123-0.0im      0.559017+0.0im  -0.484123+0.0im     0.306186+0.0im     -0.125+0.0im]
H4 = [    0.0625+0.0im    -0.176777+0.0im   0.330719+0.0im    -0.467707+0.0im     0.522913+0.0im     0.467707-0.0im   0.330719+0.0im     0.176777-0.0im     0.0625+0.0im
 -0.176777+0.0im        0.375+0.0im  -0.467707+0.0im     0.330719+0.0im  9.05639e-17+0.0im     0.330719-0.0im   0.467707-0.0im        0.375-0.0im   0.176777-0.0im
  0.330719+0.0im    -0.467707+0.0im       0.25+0.0im     0.176777+0.0im    -0.395285+0.0im    -0.176777-0.0im       0.25-0.0im     0.467707-0.0im   0.330719+0.0im
 -0.467707+0.0im     0.330719+0.0im   0.176777+0.0im       -0.375+0.0im  -1.0269e-16+0.0im       -0.375-0.0im  -0.176777-0.0im     0.330719-0.0im   0.467707-0.0im
  0.522913+0.0im  9.05639e-17+0.0im  -0.395285+0.0im  -1.0269e-16+0.0im        0.375+0.0im  -1.0269e-16+0.0im  -0.395285+0.0im  9.05639e-17+0.0im   0.522913+0.0im
  0.467707-0.0im     0.330719-0.0im  -0.176777-0.0im       -0.375-0.0im  -1.0269e-16+0.0im       -0.375+0.0im   0.176777+0.0im     0.330719+0.0im  -0.467707+0.0im
  0.330719+0.0im     0.467707-0.0im       0.25-0.0im    -0.176777-0.0im    -0.395285+0.0im     0.176777+0.0im       0.25+0.0im    -0.467707+0.0im   0.330719+0.0im
  0.176777-0.0im        0.375-0.0im   0.467707-0.0im     0.330719-0.0im  9.05639e-17+0.0im     0.330719+0.0im  -0.467707+0.0im        0.375+0.0im  -0.176777+0.0im
  0.0625+0.0im     0.176777-0.0im   0.330719+0.0im     0.467707-0.0im     0.522913+0.0im    -0.467707+0.0im   0.330719+0.0im    -0.176777+0.0im     0.0625+0.0im]
Hs_test = [H0,H1,H2,H3,H4]

for n in 1:n_max
    H_test = Hs_test[n+1]
    H = get_H(Hs_π2, n)
    for m in 0:n
        for mp in -m:m
            H_mp_m = H[H_index(mp,m)]
            H_mp_m_test = H_test[n+mp+1,n+m+1]
            @test isapprox(H_mp_m, H_mp_m_test; atol=1e-6)
        end
    end
end

